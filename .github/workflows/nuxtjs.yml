#Nuxtサイトを構築してGitHubページに展開するためのサンプルワークフロー。
#
#Nuxtで始めるには、https://nuxtjs.org/docs/get-started/installationを参照してください。
#
名前。: Nuxtサイトをページに展開します。

オン。:
  #デフォルトのブランチをターゲットにしたプッシュで実行されます。
 プッシュ。:
 枝。: [「gh-pages」。]

  #[アクション]タブからこのワークフローを手動で実行できます。
 workflow_dispatch。:

#GITHUB_TOKENのアクセス許可を設定して、GitHubページへの展開を許可します。
権限。:
 内容。: 読んだ。
 ページ。: 書く。
 id-token。: 書く。

#同時展開を1つだけ許可し、進行中の実行と最新のキューイングの間にキューに入れられた実行をスキップします。.
#ただし、これらの生産展開を完了できるようにするため、進行中の実行をキャンセルしないでください。.
同時性。:
 グループ。: 「ページ」。
 進行中のキャンセル。: 偽。

仕事。:
  #ジョブを作成します。
 ビルド。:
 実行。: ubuntu-latest。
 ステップ。:
      - 名前。: チェックアウト。
 使用する。: actions / checkout @ v3。
      - 名前。: パッケージマネージャーを検出します。
 id。: detect-package-manager。
 実行します。: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          # Automatically inject router.base in your Nuxt configuration file and set
          # target to static (https://nuxtjs.org/docs/configuration-glossary/configuration-target/).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: nuxt
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            dist
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Static HTML export with Nuxt
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
